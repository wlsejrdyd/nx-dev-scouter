name: NX Scouter PJT

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
      # 코드 체크아웃
      - name: Checkout 코드
        uses: actions/checkout@v3

      # gradlew 실행 권한 부여
      - name: gradlew 실행 권한 부여
        run: chmod +x ./gradlew

      # 버전 변수 설정
      - name: Get Version from version file
        run: |
          VERSION=$(cat version)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      # 변수 출력 확인
      - name: Use Version
        run: echo "Version is $VERSION"
        env:
          VERSION: ${{ env.VERSION }}

      # 레파지토리 이름 확인 
      - name: Repository name check
        run: "repo name is $REPONAME"
        env:
          REPONAME: nx-dev-scouter

      # 날짜 + 버전 변수 설정
      - name: 변수 설정 (DATE, VERSION)
        run: |
          echo "DATE=$(date +%Y-%m-%d)" >> $GITHUB_ENV
          echo "VERSION=${{ env.VERSION }}" >> $GITHUB_ENV  # 버전 재확인 (선택)

      # Slack 알림 (빌드 성공)
      - name: Slack 알림 (빌드 성공)
        if: success()
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data "{
            \"text\": \"✅ 빌드 및 배포 성공!\n- 이름: ${{env.REPONAME}}\n- 버전: ${{ env.DATE }}-${{ env.VERSION }}\n- 브랜치: ${{ github.ref_name }}\n- 코멘트: ${{ github.event.head_commit.message }}\n- 작성자: ${{ github.event.head_commit.author.name }}\"
          }" ${{ secrets.SLACK_WEBHOOK_URL }}

      # Slack 알림 (빌드 실패)
      - name: Slack 알림 (빌드 실패)
        if: failure()
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data "{
            \"text\": \"❌ 빌드 실패!\n- 이름: ${{env.REPONAME}}\n- 버전: ${{ env.DATE }}-${{ env.VERSION }}\n- 브랜치: ${{ github.ref_name }}\n- 코멘트: ${{ github.event.head_commit.message }}\n- 작성자: ${{ github.event.head_commit.author.name }}\"
          }" ${{ secrets.SLACK_WEBHOOK_URL }}

          #      # GitHub 태그 추가
          #      - name: GitHub 태그 추가
          #        if: success()
          #        run: |
          #          git config user.name "jdy"
          #          git config user.email "wlsejrdyd@gmail.com"
          #          git tag "${{ env.DATE }}-${{ env.VERSION }}"
          #          git push origin "${{ env.DATE }}-${{ env.VERSION }}"

